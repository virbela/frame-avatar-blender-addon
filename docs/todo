These todo notes have numbers that are referenced in the source code as "todo note N".
The purpose of this is to allow for more elaborate descriptions that are needed in multiple places.

Non numbered items

    * We should make sure no dots are in names since we use dots as separators for ROOT_OBJECT.SHAPE_KEY.VARIANT or ROOT_OBJECT.VARIANT if no shape keys are there

    * We should have convenience functions for manipulating collections based on name

        set_active(bto.data.shape_keys.key_blocks, bto.data.shape_keys.key_blocks[bake_target.shape_key_name])
          â†“
        set_active_name(bto.data.shape_keys.key_blocks, bake_target.shape_key_name)

    * maybe have buttons for selecting all UV islands of color or gray

   	* make sure we select proper UV maps when baking

   		Now this is set up when packing but it is easy to change it by mistake by clicking in the UV layer list of the object.

   	* have a look at https://docs.blender.org/api/current/bpy.app.handlers.html


Numbered items

1	Iterate through valid bake targets

	If a bake target is mirrored and also is the secondary part of a mirror we should skip it in this iteration.
	This happens in multiple places and a generalized form should be made instead.

	Example of current typical implementation
	-----------------------------------------

		for bt in ht.bake_target_collection:
			mirror, mt = bt.get_mirror_type(ht)
			if mt is MIRROR_TYPE.SECONDARY:
				continue

2 Implement operators

  Note: Groups are prefixed with # in the table below

  Table: Operator implementation status
    Operator                                Status
    --------                                -----
    # Introduction
    Help                                    Pending
    First time setup                        Pending

    # Work meshes
    New from selected                       Started - will create meshes, does not check for duplicates, updates pending data, does not store pending data
    Update selected                         Pending
    Update active shapekey                  Pending

    # Bake targets
    Validate bake targets                   Pending

    # Texture atlas
    Auto assign atlas/UV                    Pending
    Pack UV islands                         Pending

    # Work materials
    Update selected material                Pending
    Update all materials                    Pending
    Show bake/paint material                Pending
    Show preview material                   Pending

    # Baking
    Bake selected bake target               Pending
    Bake all bake targets                   Pending

    # Debug tools
    Placeholder for experiments             Pending

3 Verify coverage

    Module: operations

4 Fix problem with list references

    Initially I wanted to use bpy.PointerProperty but this is not a mutable pointer so this was not useful.
    Each bake target contains a list of variants which is fine because we are in a pure tree data structure here.
    The problem arises when we need to go from tree to graph, such as when we have bake groups that need to reference a bunch of bake targets.
    To solve this the best bet is probably to create unique IDs for each bake target and reference by that ID.
    The drawback here is that we need to go through all bake targets each time.

    See Contribution note 8 for information on how this was solved for the bake targets

    Also note the functions get_bake_target_by_identifier and require_bake_target_by_identifier in properties.py

    Currently we create the identifier based on the object and shape key, this is not ideal. We don't want a mutable identifier!

    Further reading: https://devtalk.blender.org/t/universal-unique-id-per-object/363/4