These todo entries are not bound to a specific module as the ones in main-plan.
The entries in here should be put into the main-plan if eligable or scrapped if not.

#DEPRECATED - go through and put in proper place or scrap

These todo notes have numbers that are referenced in the source code as "todo note N".
The purpose of this is to allow for more elaborate descriptions that are needed in multiple places.

Non numbered items

    * We should make sure no dots are in names since we use dots as separators for ROOT_OBJECT.SHAPE_KEY.VARIANT or ROOT_OBJECT.VARIANT if no shape keys are there

    * We should have convenience functions for manipulating collections based on name

        set_active(bto.data.shape_keys.key_blocks, bto.data.shape_keys.key_blocks[bake_target.shape_key_name])
          â†“
        set_active_name(bto.data.shape_keys.key_blocks, bake_target.shape_key_name)

    * maybe have buttons for selecting all UV islands of color or gray

   	* make sure we select proper UV maps when baking

   		Now this is set up when packing but it is easy to change it by mistake by clicking in the UV layer list of the object.

   	* have a look at https://docs.blender.org/api/current/bpy.app.handlers.html

	* workflow

		update baking scene

			We create meshes that we use for baking
			We put these meshes in a specific scene for baking
			We name them according to a specific pattern - we need to be able to get this name also when making sure we are not creating double meshes
			We assign materials to these meshes

		clean up normals for baking

			#TBD - selection based? always do all of them? one button for all, one for selected?

			We clean up normals using average face area

	* bake targets

		A bake target can be part of a bake group. If this is the case, the objects will be baked together.
		The object used for baking should have a particular bake material and we can create this with materials.setup_bake_material2




Numbered items

1	Iterate through valid bake targets

	If a bake target is mirrored and also is the secondary part of a mirror we should skip it in this iteration.
	This happens in multiple places and a generalized form should be made instead.

	Example of current typical implementation
	-----------------------------------------

		for bt in ht.bake_target_collection:
			mirror, mt = bt.get_mirror_type(ht)
			if mt is MIRROR_TYPE.SECONDARY:
				continue

2   Implement operators

  Note: Groups are prefixed with # in the table below

  Table: Operator implementation status
    Operator                                Status
    --------                                -----
    # Introduction
    Help                                    Pending
    First time setup                        Pending

    # Work meshes
    New from selected                       Started - will create meshes, does not check for duplicates, updates pending data, does not store pending data
    Update selected                         Pending
    Update active shapekey                  Pending

    # Bake targets
    Validate bake targets                   Pending

    # Texture atlas
    Auto assign atlas/UV                    Pending
    Pack UV islands                         Pending

    # Work materials
    Update selected material                Pending
    Update all materials                    Pending
    Show bake/paint material                Pending
    Show preview material                   Pending

    # Baking
    Bake selected bake target               Pending
    Bake all bake targets                   Pending

    # Debug tools
    Placeholder for experiments             Pending

3   Verify coverage

    Module: operations

4   Fix problem with list references

    Initially I wanted to use bpy.PointerProperty but this is not a mutable pointer so this was not useful.
    Each bake target contains a list of variants which is fine because we are in a pure tree data structure here.
    The problem arises when we need to go from tree to graph, such as when we have bake groups that need to reference a bunch of bake targets.
    To solve this the best bet is probably to create unique IDs for each bake target and reference by that ID.
    The drawback here is that we need to go through all bake targets each time.

    See Contribution note 8 for information on how this was solved for the bake targets

    Also note the functions get_bake_target_by_identifier and require_bake_target_by_identifier in properties.py

    Currently we create the identifier based on the object and shape key, this is not ideal. We don't want a mutable identifier!

    Further reading: https://devtalk.blender.org/t/universal-unique-id-per-object/363/4

5   UI

    Table: Property/UI implementation status (seen as a logical tree from homeomorphic tools (HomeomorphicProperties))
        Note: Selected item index will not be incorporated in this table and will be implied from any collection type

        Property                                        Status                  Purpose/Comment
        --------                                        -------                 ---------------
        bake_target_collection                          Implemented             Collection of all bake targets
            identifier                                  Deprecated              See todo 4
            name                                        Implemented             Name of bake target
            object_name                                 Deprecated              Deprecated due to Todo-4, use object_reference for index
            object_reference                            Partially implemented
            shape_key_name                              Implemented             Original name of shape key
            uv_area_weight                              Implemented but ...     Importance of UV island - Not implemented in logic
            bake_mode                                   Implemented but ...     Bake mode - Not implemented in logic
                Regular                                 Pending
                Mirror                                  Pending
            uv_mirror_axis                              Implemented but ...     Ability to select UV axis for mirrored bake mode. Not implemented in logic
                U                                       Pending
                V                                       Pending
            uv_mode                                     Implemented
                Grayscale                               Pending
                Color                                   Pending
                Nil UV island                           Pending
                Frozen                                  Pending
            atlas                                       Implemented but ...     Name of atlas. (see todo 4)
            uv_target_channel                           Implemented but ...     Not implemented in logic yet.
                Unassigned                              Pending
                Color channel                           Pending
                Red channel                             Pending
                Green channel                           Pending
                Blue channel                            Pending
            multi_variants                              Implemented
            variant_collection                          Implemented but ...     Not implemented in logic yet.
                name                                    Pending
                image                                   Pending
                uv_map                                  Pending

        bake_target_mirror_collection                   Deprecated              Mirrors will be defined using additional bake targets that have a reference to original
            primary                                     Pending                 Should use index instead to be consistent with other references of bake targets
            secondary                                   Pending                 Should use index instead to be consistent with other references of bake targets

        bake_group_collection
            name
            members

        source_object
        atlas_size
        color_percentage
        painting_size

6   Using PointerProperty where possible (contribution note 10) and list views where not, fix the todo-4 problem.